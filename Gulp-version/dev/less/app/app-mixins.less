/*
  # Mixin Interfaces #
  */

/*   
##`.fix-float()`##

### Description ###

Can be used to wrap around floated elements. Using `fix-float`, the wrapper
gets a height and stays in the flow of the document.

### Parameters: none ###

### Usage ###
  Apply the class to a wrapper div that contains floated elements.

### Example ###

    <div class="fix-float">
      <div>floated div</div>
      <div>floated div</div>
      <div>floated div</div>
    </div>
***********************
*/  

.fix-float:after{
  .fix-float();
}

//--------------------

/*   
##`.box-shadow-well([@blur, @speed, @color])`

### Description ###

Creats a subtle well region with a small inner shadow.

### Parameters: ###

__@blur__ (optional) : The amout of shadow blur in pixels or any other valid units.

__@speed__ (optional) : The amout of shadow speed in pixels or any other valid units.

__@color__ (optional) : The shadow color in any valid color units.

### Usage ###
  Can be mixed in with any block-level component. The three parameters are optional.
  It is also possible to use each parameter individually. See examples below.

### Examples ###
    
    // All the examples below are block-level elements.
    .example1{
      .box-shadow-well(10px, 10px, #000); // using all the parameters
    }

    .example2{
      .box-shadow-well(); // Calling without any parameters.
    }

    .example3{
      // Calling with one parameter. 
      // Note that the order of the parameter is not important.
      .box-shadow-well(@color : #e5e6e7);
    }
    */

// box shadow definitions.
.box-shadow-well(@blur :10px ; @speed : 0 ; @color : #000){
  .box-shadow("inset 0 0 @{blur} @{speed} @{color}");
}
//--------------


/*   
##`.smooth(@duration)`

### Description ###

Animates the opacity property of an element using CSS3 transitions.

### Parameters: ###

__@duration__ : The animation duration. Can be either expressed in `ms` or `s`.

### Usage ###
  Can be mixed in with elements that have different states, like hover or active.
  See the example below

### Examples ###

    // Adding transition to all of the links
    a, a:hover{
      .smooth(200ms);
    }
    
    */

    .smooth(@duration : @animation-duration){
      transition : opacity @duration @animation-timing-function;
    }
    .smooth-bg(@duration : @animation-duration){
      transition : background @duration @animation-timing-function; 
    }

/*   
##`.make-font-size(@base-size , @step-size , @how-many-sizes)`

### Description ###

Creates different font size classes given the base font size and the number of 
font sizes needed with a step size.

### Parameters: ###

__@base-size__  : The font size used to calculate the other font sizes from
__@step-size  : The distance between each iteration.
__@how-many-size  : The number of font size classes needed:

### Usage ###
  this is how you can use it, just mix it in with your less and there you go

### Examples ###
    example starts here
    */

    .make-fs(@fs-upper-bound);
    .make-fs( @i: @fs-lower-bound ; @j : 1) when not(@i=0) {
      @v : (@i)/(1/((@_base-fs)))/100;
      .fs-@{j}{
        font-size : ~"@{v}em";
      }
      .make-fs( (@i - @fs-steps), (@j + 1));
    }

// the closest that i got to it.



.make-fs(  @base-size ; @how-many ; @unit; @j : 1  ;  @_s:0 ; @step-size  )
when not((@how-many)=0) and  (@unit=px) {


  @size : @base-size+@_s;
  .fs-@{j}{
    font-size : ~"@{size}@{unit}";
  }
  .make-fs(  @base-size ,  (@how-many - 1), @unit ,
    (@j + 1) ,  (@_s+@step-size) , @step-size );
}


//.make-fs(@base-size:13,  @step-size : 4, @how-many:5 , @unit : px );



.fibo( @n,@unit) {
  font-size: ~`
    (function(n,unit){ 
    var previous, current, temp; 
  if (n == 0){
      return n + unit;  
    }else{
    previous = 1;   current = 1;
    for (i = 3; i<=n; i++){
      temp = previous + current;      previous  = current;
      current = temp;

    }
     return current+unit;
   }
   })( "@{n}", "@{unit}" )`;

}

.make-fibo-for(   @how-many ; @unit; @j : 1  ;  @starting-term:0 ; @step-size:1  ; @class-name )
when not((@how-many)=0)  {



  .@{class-name}-@{j}{
    .fibo(@starting-term,~"@{unit}");
    }
    .make-fibo-for(   (@how-many - 1), @unit ,
      (@j + 1) ,  (@starting-term+@step-size) , @step-size , @class-name );
  }


  .make-fibo-for( @how-many:100 , @starting-term:0, @unit : "%", @class-name: grid );




//gradient

// Gradient Bar Colors for buttons and alerts
.gradientBar(@primaryColor, @secondaryColor, @textColor: #fff, @textShadow: 0 -1px 0 rgba(0,0,0,.25)) {
  color: @textColor;
  text-shadow: @textShadow;
  #gradient > .vertical(@primaryColor, @secondaryColor);
  border-color: @secondaryColor @secondaryColor darken(@secondaryColor, 15%);
  border-color: rgba(0,0,0,.1) rgba(0,0,0,.1) fadein(rgba(0,0,0,.1), 15%);
}




//doc goes here.
.text-stand-out(){
  .text-shadow("0px 2px 3px #555;");
}